<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:AW.Visual.Converters">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:BlackOrWhiteConverter x:Key="BlackOrWhite"/>
    <conv:BooleanToValueConverter x:Key="BooleanToValue"/>
    <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibility"/>
    <conv:InverseBooleanConverter x:Key="InverseBoolean"/>

    <Style TargetType="md:SmartHint" BasedOn="{StaticResource {x:Type md:SmartHint}}">
        <Setter Property="Margin" Value="1 0 0 0" />
    </Style>

    <Style x:Key="HoverBG" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RedHoverBG" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AWAction" TargetType="{x:Type ButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="md:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
        <Setter Property="TextBlock.FontWeight" Value="Normal"/>
        <Setter Property="TextBlock.FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <md:Ripple
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                Focusable="False"   />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AWFlatButton" TargetType="{x:Type ButtonBase}"  BasedOn="{StaticResource AWAction}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignSelection}" />
                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AWTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBoxBase}" >
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Visibility="Collapsed"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AWFloatingHintTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource AWTextBox}">
        <Setter Property="md:HintAssist.IsFloating" Value="True"/>
    </Style>

    <Style x:Key="AWFilledTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource AWFloatingHintTextBox}">
        <Setter Property="md:TextFieldAssist.HasFilledTextField" Value="True" />
        <Setter Property="md:TextFieldAssist.RippleOnFocusEnabled" Value="True" />
        <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4,4,0,0" />
        <Setter Property="md:TextFieldAssist.UnderlineCornerRadius" Value="0" />
    </Style>

    <Style x:Key="AWOutlinedTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource AWFloatingHintTextBox}">
        <Setter Property="md:TextFieldAssist.HasOutlinedTextField" Value="True" />
        <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="4" />
    </Style>

    <Style x:Key="AWSearchTextBox" TargetType="TextBox" BasedOn="{StaticResource AWOutlinedTextBox}">
        <Setter Property="md:TextFieldAssist.TextFieldCornerRadius" Value="0"/>
        <Setter Property="md:HintAssist.Background" Value="{DynamicResource MaterialDesignBackground}"/>
        <Setter Property="md:HintAssist.FloatingScale" Value="0.95"/>
    </Style>

</ResourceDictionary>